import streamlit as st
from joblib import load
import numpy as np

# Carregar o modelo
model = load('model.jbl')

# Personaliza√ß√£o do Streamlit
st.set_page_config(
    page_title="Modelo de Cr√©dito",
    page_icon="üí≥",
    layout="centered",
    initial_sidebar_state="expanded",
)

# T√≠tulo e descri√ß√£o do aplicativo
st.title('Modelo de Cr√©dito üí≥')
st.markdown("""
    ### Bem-vindo ao nosso aplicativo de modelo de cr√©dito!
    Este aplicativo permite que voc√™ insira algumas caracter√≠sticas financeiras e obtenha uma previs√£o 
    sobre a aprova√ß√£o de cr√©dito com base em nosso modelo de machine learning.
""")

# Criar um cont√™iner para o formul√°rio de entrada
with st.form(key='credit_form'):
    st.header("Insira suas informa√ß√µes financeiras")
    
    # Campos de entrada
    feature1 = st.number_input('Digite a taxa de d√©bito em rela√ß√£o a renda:', format="%.2f")
    feature2 = st.number_input('Digite a taxa de mantimentos em rela√ß√£o a renda:', format="%.2f")
    feature3 = st.number_input('Digite a taxa de renda:', format="%.2f")

    # Bot√£o de submiss√£o
    submit_button = st.form_submit_button(label='Predizer')

# Processar a predi√ß√£o ao clicar no bot√£o
if submit_button:
    input_features = np.array([feature1, feature2, feature3]).reshape(1, -1)
    
    prediction = model.predict(input_features)
    prediction_proba = model.predict_proba(input_features)

    # Exibir o resultado da predi√ß√£o
    st.subheader("Resultado da Predi√ß√£o:")
    if prediction[0] == 1:
        st.success('Cr√©dito aprovado.')
    else:
        st.warning('Cr√©dito em an√°lise. Forne√ßa mais dados.')
    st.info(f'Probabilidades de aprova√ß√£o: {prediction_proba[0][1]:.2f}')

# Rodap√© personalizado
st.markdown("""
    ---
    Desenvolvido por [Nayara Valevskii](https://github.com/NayaraWakewski)  
    Projeto de aprendizado de m√°quina para previs√£o de cr√©dito.
""")


